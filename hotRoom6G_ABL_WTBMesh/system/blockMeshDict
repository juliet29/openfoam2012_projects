/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (                  0                  0                  0 )  // 0 v0-y
    (                 25                  0                  0 )  // 1 v1-y
    (                 25                  4                  0 )  // 2 v1+y
    (                  0                  4                  0 )  // 3 v0+y
    (                  1                  0                  1 )  // 4 v4-y
    (                  2                  0                  1 )  // 5 v5-y
    (                  2                  1                  1 )  // 6 v5+y
    (                  1                  1                  1 )  // 7 v4+y
    (                  1                  0                  2 )  // 8 v7-y
    (                  2                  0                  2 )  // 9 v6-y
    (                  1                  1                  2 )  // 10 v7+y
    (                  2                  1                  2 )  // 11 v6+y
    (                  0                  0                  4 )  // 12 v3-y
    (                 25                  0                  4 )  // 13 v2-y
    (                  0                  4                  4 )  // 14 v3+y
    (                 25                  4                  4 )  // 15 v2+y
);

edges
(
);

blocks
(
    hex (0 1 2 3 12 13 15 14) b0 (50 20 20) simpleGrading (1 1 1)  // b0 (v0-y v1-y v1+y v0+y v3-y v2-y v2+y v3+y)
    hex (4 5 6 7 8 9 11 10) b1 (2 5 5) simpleGrading (1 1 1)  // b1 (v4-y v5-y v5+y v4+y v7-y v6-y v6+y v7+y)
);

boundary
(
    bottom
    {
        type wall;
        faces
        (
            (0 1 13 12)  // f-b0-s (v0-y v1-y v2-y v3-y)
        );
    }
    top
    {
        type wall;
        faces
        (
            (2 3 14 15)  // f-b0-n (v1+y v0+y v3+y v2+y)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (1 2 15 13)  // f-b0-n (v1-y v1+y v2+y v2-y)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (0 12 14 3)  // f-b0-w (v0-y v3-y v3+y v0+y)
        );
    }
    side01
    {
        type symmetry;
        faces
        (
            (0 3 2 1)  // f-b0-b (v0-y v0+y v1+y v1-y)
        );
    }
    side02
    {
        type symmetry;
        faces
        (
            (12 13 15 14)  // f-b0-t (v3-y v2-y v2+y v3+y)
        );
    }
    box
    {
        type wall;
        faces
        (
            (4 8 10 7)  // f-b1-w (v4-y v7-y v7+y v4+y)
            (5 6 11 9)  // f-b1-n (v5-y v5+y v6+y v6-y)
            (4 5 9 8)  // f-b1-s (v4-y v5-y v6-y v7-y)
            (6 7 10 11)  // f-b1-n (v5+y v4+y v7+y v6+y)
            (4 7 6 5)  // f-b1-b (v4-y v4+y v5+y v5-y)
            (8 9 11 10)  // f-b1-t (v7-y v6-y v6+y v7+y)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //

