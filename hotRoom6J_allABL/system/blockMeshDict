/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (                  0                  0                  0 )  // 0 v0-y
    (                 20                  0                  0 )  // 1 v1-y
    (                 20                  3                  0 )  // 2 v1+y
    (                  0                  3                  0 )  // 3 v0+y
    (                  0                  0                  3 )  // 4 v3-y
    (                 20                  0                  3 )  // 5 v2-y
    (                  0                  3                  3 )  // 6 v3+y
    (                 20                  3                  3 )  // 7 v2+y
);

edges
(
);

blocks
(
    hex (0 1 2 3 4 5 7 6) b0 (70 50 20) 
    simpleGrading (
        1
        (
            (0.16 0.2 1.06)    // % y-dir, % cells, expansion
            (0.84 0.8 1)    // % y-dir, % cells, expansion
        )
        1

    )  // b0 (v0-y v1-y v1+y v0+y v3-y v2-y v2+y v3+y)
);

boundary
(
    bottom
    {
        type wall;
        faces
        (
            (0 1 5 4)  // f-b0-s (v0-y v1-y v2-y v3-y)
        );
    }
    top
    {
        type wall;
        faces
        (
            (2 3 6 7)  // f-b0-n (v1+y v0+y v3+y v2+y)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (0 4 6 3)  // f-b0-w (v0-y v3-y v3+y v0+y)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (1 2 7 5)  // f-b0-n (v1-y v1+y v2+y v2-y)
            
        );
    }
    side01
    {
        type symmetry;
        faces
        (
            (0 3 2 1)  // f-b0-b (v0-y v0+y v1+y v1-y)
        );
    }
    side02
    {
        type symmetry;
        faces
        (
            (4 5 7 6)  // f-b0-t (v3-y v2-y v2+y v3+y)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //

